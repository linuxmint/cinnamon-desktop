<?xml version="1.0" encoding="UTF-8"?>
<schemalist>
  <schema id="org.cinnamon.desktop.wm.preferences" path="/org/cinnamon/desktop/wm/preferences/">
    <key name="mouse-button-modifier" type="s">
      <default><![CDATA['<Alt>']]></default>
      <summary>Modifier to use for modified window click actions</summary>
      <description>
        Clicking a window while holding down this modifier key  will move the
        window (left click), resize the window  (middle click), or show the
        window menu (right click). The middle and right click operations may
        be swapped using the "resize-with-right-button" key. Modifier is
        expressed as <![CDATA["<Alt>"]]> or <![CDATA["<Super>"]]> for example.
    </description>
    </key>
    <key name="mouse-button-zoom-modifier" type="s">
      <default><![CDATA['<Alt>']]></default>
      <summary>Modifier to use for a11y mouse desktop zoom</summary>
      <description>
        Operating the mouse wheel while holding down this modifier key  will
        zoom the desktop in and out if desktop magnifier is enabled. Modifier is
        expressed as <![CDATA["<Alt>"]]> or <![CDATA["<Super>"]]> for example.
    </description>
    </key>
    <key name="resize-with-right-button" type="b">
      <default>true</default>
      <summary>Whether to resize with the right button</summary>
      <description>
        Set this to true to resize with the right button and show a menu with
        the middle button while holding down the key given in
        "mouse-button-modifier"; set it to false to make it work
        the opposite way around.
       </description>
    </key>
    <key name="button-layout" type="s">
      <default>'menu:minimize,maximize,close'</default>
      <summary>Arrangement of buttons on the titlebar</summary>
      <description>
        Arrangement of buttons on the titlebar. The value should be a string,
        such as  "menu:minimize,maximize,spacer,close"; the colon separates
        the  left corner of the window from the right corner, and  the button
        names are comma-separated. Duplicate buttons are not allowed. Unknown
        button names are silently ignored so that buttons can be added in
        future metacity versions  without breaking older versions. A special
        spacer tag can be used to insert some space between
        two adjacent buttons.
      </description>
    </key>
    <key name="focus-mode" enum="org.cinnamon.desktop.CDesktopFocusMode">
      <default>'click'</default>
      <summary>Window focus mode</summary>
      <description>
        The window focus mode indicates how windows are activated.  It has
        three possible values; "click" means windows must  be clicked in order
        to focus them, "sloppy" means windows are focused when the mouse enters
        the window, and "mouse" means windows are focused when the mouse enters
        the window and  unfocused when the mouse leaves the window.
      </description>
    </key>
    <key name="focus-new-windows"
         enum="org.cinnamon.desktop.CDesktopFocusNewWindows">
      <default>'smart'</default>
      <summary>Control how new windows get focus</summary>
      <description>
        This option provides additional control over how newly created windows
        get focus.  It has two possible values; "smart" applies the user's
        normal focus mode, and "strict" results in windows started from a
        terminal not being given focus.
      </description>
    </key>
    <key name="raise-on-click" type="b">
      <default>true</default>
      <summary>
        Whether raising should be a side-effect of other user interactions
      </summary>
      <description>
        Setting this option to false can lead to buggy behavior, so users are
        strongly discouraged from changing it from the default of true.  Many
        actions (e.g. clicking in the client area, moving or resizing the window)
        normally raise the window as a side-effect. Setting this option to false,
        which is strongly discouraged, will decouple raising from other user
        actions, and ignore raise requests generated by applications.
        See http://bugzilla.gnome.org/show_bug.cgi?id=445447#c6.

        Even when this option is false, windows can still be raised by an
        alt-left-click anywhere on the window, a normal click on the window
        decorations, or by special messages from pagers, such as activation
        requests from tasklist applets. This option is currently disabled
        in click-to-focus mode. Note that the list of ways to raise windows
        when raise-on-click is false does not include programmatic requests
        from applications to raise windows; such requests will be ignored
        regardless of the reason for the request.

        If you are an application developer and have a user complaining that
        your application does not work with this setting disabled, tell them
        it is -their- fault for breaking their window manager and that they
        need to change this option back to true or live with the "bug"
        they requested.
      </description>
    </key>
    <key name="action-double-click-titlebar"
         enum="org.cinnamon.desktop.CDesktopTitlebarAction">
      <default>'toggle-maximize'</default>
      <summary>Action on title bar double-click</summary>
      <description>
        This option determines the effects of double-clicking on the title bar.

        Current valid options are 'toggle-shade', which will shade/unshade the
        window, 'toggle-maximize' which will maximize/unmaximize the window,
        'toggle-maximize-horizontally' and 'toggle-maximize-vertically'
        which will maximize/unmaximize the window in that direction only,
        'minimize' which will minimize the window, 'shade' which will roll
        the window up, 'menu' which will display the window menu,
        'lower' which will put the window behind all the others,
        and 'none' which will not do anything.
      </description>
      <!-- For compatibility with GConf strings (Metacity 2.30) -->
      <aliases>
        <alias value="toggle_shade" target="toggle-shade"/>
        <alias value="toggle_maximize" target="toggle-maximize"/>
        <alias value="toggle_maximize_horizontally"
               target="toggle-maximize-horizontally"/>
        <alias value="toggle_maximize_vertically"
               target="toggle-maximize-vertically"/>
      </aliases>
    </key>
    <key name="action-middle-click-titlebar"
         enum="org.cinnamon.desktop.CDesktopTitlebarAction">
      <default>'lower'</default>
      <summary>Action on title bar middle-click</summary>
      <description>
        This option determines the effects of middle-clicking on the title bar.

        Current valid options are 'toggle-shade', which will shade/unshade
        the window, 'toggle-maximize' which will maximize/unmaximize the window,
        'toggle-maximize-horizontally' and 'toggle-maximize-vertically'
        which will maximize/unmaximize the window in that direction only,
        'minimize' which will minimize the window, 'shade' which will roll
        the window up, 'menu' which will display the window menu,
        'lower' which will put the window behind all the others,
        and 'none' which will not do anything.
      </description>
      <!-- For compatibility with GConf strings (Metacity 2.30) -->
      <aliases>
        <alias value="toggle_shade" target="toggle-shade"/>
        <alias value="toggle_maximize" target="toggle-maximize"/>
        <alias value="toggle_maximize_horizontally"
               target="toggle-maximize-horizontally"/>
        <alias value="toggle_maximize_vertically"
               target="toggle-maximize-vertically"/>
      </aliases>
    </key>
    <key name="action-right-click-titlebar"
         enum="org.cinnamon.desktop.CDesktopTitlebarAction">
      <default>'menu'</default>
      <summary>Action on title bar right-click</summary>
      <description>
        This option determines the effects of right-clicking on the title bar.

        Current valid options are 'toggle-shade', which will shade/unshade
        the window, 'toggle-maximize' which will maximize/unmaximize
        the window, 'toggle-maximize-horizontally' and
        'toggle-maximize-vertically' which will maximize/unmaximize
        the window in that direction only, 'minimize' which will minimize
        the window, 'shade' which will roll the window up,
        'menu' which will display the window menu, 'lower' which will put
        the window behind all the others, and 'none' which will not do anything.
      </description>
      <!-- For compatibility with GConf strings (Metacity 2.30) -->
      <aliases>
        <alias value="toggle_shade" target="toggle-shade"/>
        <alias value="toggle_maximize" target="toggle-maximize"/>
        <alias value="toggle_maximize_horizontally"
               target="toggle-maximize-horizontally"/>
        <alias value="toggle_maximize_vertically"
               target="toggle-maximize-vertically"/>
      </aliases>
    </key>
    <key name="action-scroll-titlebar"
         enum="org.cinnamon.desktop.CDesktopTitlebarScrollAction">
      <default>'none'</default>
      <summary>Action on spinning the mouse wheel on the titlebar</summary>
      <description>
        This option determines the effects of using the mouse wheel on the title bar.
        Current options are: opacity, shade
      </description>
    </key>
    <key name="min-window-opacity" type="i">
      <range min="0" max="100"/>
      <default>30</default>
      <summary>Minimum allowable window opacity (by percent) via user adjustment</summary>
      <description>
        This is the minimum opacity (by percent) a user can adjust the window to when
        using keybindings or the mouse wheel.
      </description>
    </key>
    <key name="auto-raise" type="b">
      <default>false</default>
      <summary>Automatically raises the focused window</summary>
      <description>
        If set to true, and the focus mode is either "sloppy" or "mouse"
        then the focused window will be automatically raised after a delay
        specified by the auto-raise-delay key. This is not related to clicking
        on a window to raise it, nor to entering a window during drag-and-drop.
      </description>
    </key>
    <key name="auto-raise-delay" type="i">
      <range min="0" max="10000"/>
      <default>500</default>
      <summary>Delay in milliseconds for the auto raise option</summary>
      <description>
        The time delay before raising a window if auto-raise is set to true.
        The delay is given in thousandths of a second.
      </description>
    </key>
    <key name="theme" type="s">
      <default>'Adwaita'</default>
      <summary>Current theme</summary>
      <description>
        The theme determines the appearance of window borders, titlebar,
        and so forth.
      </description>
    </key>
    <key name="theme-backup" type="s">
      <default>'Adwaita'</default>
      <summary>Current theme backup</summary>
      <description>
        This is used to store the current theme when enabling high contrast.
      </description>
    </key>
    <key name="titlebar-uses-system-font" type="b">
      <default>false</default>
      <summary>Use standard system font in window titles</summary>
      <description>
        If true, ignore the titlebar-font option, and use the standard
        application font for window titles.
      </description>
    </key>
    <key name="titlebar-font" type="s">
      <default>'Sans Bold 10'</default>
      <summary>Window title font</summary>
      <description>
        A font description string describing a font for window titlebars.
        The size from the description will only be used if the
        titlebar-font-size option is set to 0. Also, this option is disabled
        if the titlebar-uses-desktop-font option is set to true.
      </description>
    </key>
    <key name="num-workspaces" type="i">
      <default>4</default>
      <range min="1" max="36"/>
      <summary>Number of workspaces</summary>
      <description>
        Number of workspaces. Must be more than zero, and has a fixed maximum
        to prevent making the desktop unusable by accidentally asking
        for too many workspaces.
      </description>
    </key>
    <key name="audible-bell" type="b">
      <default>false</default>
      <summary>System Bell is Audible</summary>
      <description>
        Determines whether applications or the system can generate audible
        'beeps'; may be used in conjunction with 'visual bell'
        to allow silent 'beeps'.
      </description>
    </key>
    <key name="visual-bell" type="b">
      <default>false</default>
      <summary>Enable Visual Bell</summary>
      <description>
        Turns on a visual indication when an application or the system issues
        a 'bell' or 'beep'; useful for the hard-of-hearing and for use
        in noisy environments.
      </description>
    </key>
    <key name="visual-bell-type"
         enum="org.cinnamon.desktop.CDesktopVisualBellType">
      <default>'fullscreen-flash'</default>
      <summary>Visual Bell Type</summary>
      <description>
        Tells the WM how to implement the visual indication that the
        system bell or another application 'bell' indicator has been rung.

        Currently there are two valid values, "fullscreen-flash", which
        causes a fullscreen white-black flash, and "frame-flash" which
        causes the titlebar of the application which sent the bell signal
        to flash.

        If the application which sent the bell is unknown (as is usually
        the case for the default "system beep"), the currently focused
        window's titlebar is flashed.
      </description>
      <!-- For compatibility with GConf strings (Metacity 2.30) -->
      <aliases>
        <alias value="fullscreen" target="fullscreen-flash"/>
        <alias value="frame_flash" target="frame-flash"/>
      </aliases>
    </key>
    <key name="bell-sound" type="s">
      <default>'/usr/share/cinnamon/sounds/bell.ogg'</default>
      <summary>Sound to use for the event bell</summary>
    </key>
    <key name="application-based" type="b">
      <default>false</default>
      <summary>
        (Not implemented) Navigation works in terms of applications not windows
      </summary>
      <description>
        If true, then the WM works in terms of applications rather than
        windows. The concept is a bit abstract, but in general an
        application-based setup is more like the Mac and less like Windows.
        When you focus a window in application-based mode, all the windows
        in the application will be raised. Also, in application-based mode,
        focus clicks are not passed through to windows in other applications.
        Application-based mode is, however, largely unimplemented
        at the moment.
      </description>
    </key>
    <key name="disable-workarounds" type="b">
      <default>false</default>
      <summary>
        Disable misfeatures that are required by old or broken applications
      </summary>
      <description>
        Some applications disregard specifications in ways that result in
        window manager misfeatures. This option puts the WM in a
        rigorously correct mode, which gives a more consistent
        user interface, provided one does not need to run any
        misbehaving applications.
      </description>
    </key>
    <key name="workspace-names" type="as">
      <default>[]</default>
      <summary>The names of the workspaces</summary>
      <description>
        Defines the names that should be assigned to workspaces.
        If the list is too long for the current number of workspaces,
        names in excess will be ignored. If the list is too short, or
        includes empty names, missing values will be replaced with the
        default ("Workspace N").
      </description>
    </key>
  </schema>

</schemalist>
